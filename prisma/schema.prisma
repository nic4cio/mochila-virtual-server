// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String 

  firstName String?
  lastName  String?

  curso String 

  role UserRole @default(USER)

  matCurador String[]

  historico String

  motivoCurador String

  bookmarks Bookmark[]
  conteudos Conteudo[]
  comentarios Comentario[]
  contentRatings ContentRating[]

  @@map("users")
}

model Bookmark {
  id        Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String? 
  link        String 

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@map("bookmarks")
}

model Conteudo {
  id Int @id @default(autoincrement())

  titulo String
  materia String
  assunto String
  descricao String?
  pdf String
  createdAt DateTime @default(now()) @db.Date

  userId Int
  user User @relation(fields: [userId], references: [id])

  comentarios Comentario[]
  ratings ContentRating[]

  status String @default("AGUARDANDO_APROVACAO")

  @@map("conteudos")
}

model Comentario {
  id Int @id @default(autoincrement())

  texto String
  upvote Int?
  downvote Int?

  userId Int
  user User @relation(fields: [userId], references: [id])

  conteudoId Int 
  conteudo Conteudo @relation(fields: [conteudoId], references: [id])

  @@map("comentarios")
}

model ContentRating {
  id        Int      @id @default(autoincrement())
  userId    Int
  conteudoId Int
  voteType  EnumVoteType
  createdAt DateTime @default(now())

  User      User     @relation(fields: [userId], references: [id])
  Conteudo   Conteudo  @relation(fields: [conteudoId], references: [id])

  @@unique([userId, conteudoId])
}

enum UserRole {
  USER
  ANALISE
  CURADOR
}

enum EnumVoteType {
  UPVOTE
  DOWNVOTE
}
